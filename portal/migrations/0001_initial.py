# Generated by Django 4.0.6 on 2023-02-14 02:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(blank=True, max_length=100, null=True)),
                ('mrn', models.CharField(blank=True, max_length=100, null=True)),
                ('acc', models.CharField(blank=True, max_length=100, null=True)),
                ('case_type', models.CharField(blank=True, choices=[('MRA', 'GRASP MRA'), ('Onco', 'GRASP Onco'), ('SVW', 'Series Viewer')], max_length=100, null=True)),
                ('exam_time', models.DateTimeField(blank=True, null=True)),
                ('receive_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('RCVD', 'Received'), ('QUED', 'Queued'), ('PROC', 'Processing'), ('RDY', 'Ready'), ('VIEW', 'Viewing'), ('COMP', 'Complete'), ('ARCH', 'Archived'), ('ERR', 'Error'), ('DEL', 'Delete')], default='RCVD', max_length=100)),
                ('num_spokes', models.CharField(default='', max_length=1000)),
                ('twix_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('case_location', models.CharField(max_length=10000)),
                ('settings', models.JSONField(null=True)),
                ('incoming_payload', models.JSONField()),
                ('last_read_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_read_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gravis_case',
            },
        ),
        migrations.CreateModel(
            name='DICOMSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('set_location', models.CharField(max_length=10000)),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('origin', models.CharField(max_length=100)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dicom_sets', to='portal.case')),
            ],
            options={
                'db_table': 'gravis_dicom_set',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_mode', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gravis_user_profile',
            },
        ),
        migrations.CreateModel(
            name='SessionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('cameras', models.JSONField()),
                ('voi', models.JSONField()),
                ('annotations', models.JSONField()),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portal.case')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'gravis_session',
            },
        ),
        migrations.CreateModel(
            name='ProcessingJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('category', models.CharField(max_length=100)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('error_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('json_result', models.JSONField(null=True)),
                ('parameters', models.JSONField(null=True)),
                ('docker_image', models.CharField(blank=True, max_length=100, null=True)),
                ('rq_id', models.CharField(blank=True, max_length=100, null=True)),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portal.case')),
                ('dicom_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portal.dicomset')),
            ],
            options={
                'db_table': 'gravis_processing_job',
            },
        ),
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=100)),
                ('file_location', models.CharField(max_length=1000, null=True)),
                ('data', models.JSONField(null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('dicom_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='portal.dicomset')),
            ],
            options={
                'db_table': 'gravis_finding',
            },
        ),
        migrations.AddField(
            model_name='dicomset',
            name='processing_job',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='result_sets', to='portal.processingjob'),
        ),
        migrations.CreateModel(
            name='DICOMInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance_location', models.CharField(max_length=10000)),
                ('study_uid', models.CharField(max_length=200)),
                ('series_uid', models.CharField(max_length=200)),
                ('instance_uid', models.CharField(max_length=200)),
                ('acquisition_seconds', models.FloatField(null=True)),
                ('acquisition_number', models.IntegerField(null=True)),
                ('series_number', models.IntegerField(null=True)),
                ('slice_location', models.FloatField(null=True)),
                ('num_frames', models.IntegerField(default=1, null=True)),
                ('json_metadata', models.JSONField()),
                ('dicom_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='portal.dicomset')),
            ],
            options={
                'db_table': 'gravis_dicom_instance',
            },
        ),
        migrations.AddField(
            model_name='case',
            name='viewed_by',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='viewed_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='dicominstance',
            index=models.Index(fields=['series_uid', 'acquisition_number'], name='gravis_dico_series__b4f03f_idx'),
        ),
        migrations.AddIndex(
            model_name='dicominstance',
            index=models.Index(fields=['study_uid', 'series_number'], name='gravis_dico_study_u_6806d2_idx'),
        ),
        migrations.AddConstraint(
            model_name='dicominstance',
            constraint=models.UniqueConstraint(fields=('dicom_set', 'study_uid', 'series_uid', 'instance_uid'), name='unique_uids'),
        ),
    ]
